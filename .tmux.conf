# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# prefixC-a
set -g prefix C-Space

# Terminal Color 256
set -g default-terminal "xterm-256color"
set -g terminal-overrides "term:colors=256"

#### COLOR (Solarized 256)
# default statusbar colors
#set -g status-position top
set -g status off
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
#bind - split-window -c "#{pane_current_path}" -v
#bind | split-window -c "#{pane_current_path}" -h
bind s split-window -c "#{pane_current_path}" -v
bind v split-window -c "#{pane_current_path}" -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w

isVim="tmux display-message -p '#{pane_current_command}' | grep -iqE '(vim|VIM)'"
bind h if-shell "$isVim" "send-keys C-h" "select-pane -L"
bind j if-shell "$isVim" "send-keys C-j" "select-pane -D"
bind k if-shell "$isVim" "send-keys C-k" "select-pane -U"
bind l if-shell "$isVim" "send-keys C-l" "select-pane -R"
bind \ if-shell "$isVim" "send-keys C-\\" "select-pane -l"
bind -n C-h if-shell "$isVim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$isVim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$isVim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$isVim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$isVim" "send-keys C-\\" "select-pane -l"

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind + resize-pane -U 1
bind - resize-pane -D 1
bind -n M-left resize-pane -L 1
bind -n M-right resize-pane -R 1
bind -n M-up resize-pane -U 1
bind -n M-down resize-pane -D 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

unbind [
unbind ]
unbind p
bind p paste-buffer
bind Enter copy-mode

bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Y send -X select-line \;  send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi C-v send -X begin-selection \; send -X rectangle-toggle
bind-key -T copy-mode-vi Escape send -X clear-selection
bind-key -T copy-mode-vi C-[ send -X clear-selection
bind-key -T copy-mode-vi C-c send -X cancel

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'
#set-option -g mode-mouse on
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
#set-option -g mouse-resize-pane on

set-option -g default-command "reattach-to-user-namespace -l bash"

# Save-Session
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'irb pry "~rails server" "~rails console"'

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'
run '~/.tmux/plugins/tpm/bin/install_plugins'
